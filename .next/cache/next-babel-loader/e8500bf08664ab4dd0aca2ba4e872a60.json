{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport web3 from \"../../ethereum/web3\";\nimport instance from \"../../ethereum/compiledID\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Header, Grid, Button, Segment, Message } from \"semantic-ui-react\";\n\nclass NewRequest extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      errMessage: \"\",\n      loading: false,\n      UserAddress: null,\n      requestedBy: null,\n      errorAddress: null,\n      errorRequestedby: null\n    });\n\n    _defineProperty(this, \"validation\", () => {\n      this.setState({\n        errorAddress: null,\n        errorRequestedby: null\n      }); //Required\n      // For Addtress field!\n\n      if (!this.state.UserAddress) {\n        this.setState({\n          errorAddress: \"Required Fields!\"\n        });\n      } else {\n        const address = this.state.UserAddress;\n        let bool = web3.utils.isAddress(address);\n        console.log(bool);\n\n        if (!bool) {\n          this.setState({\n            errorAddress: \"Enter a valid User Address!\"\n          });\n        }\n      } // For RequestedBy Field\n\n\n      if (!this.state.requestedBy) {\n        this.setState({\n          errorRequestedby: \"Required Fields!\"\n        });\n      } else {\n        var bool = this.isAlpha(this.state.requestedBy);\n\n        if (!bool) {\n          this.setState({\n            errorRequestedby: \"Enter a valid Name!\"\n          });\n        }\n      }\n    });\n  }\n\n  isAlpha(input) {\n    var pattern = /^[^\\s][a-zA-Z ]*$/;\n    return pattern.test(input);\n  }\n\n  isValidAddress(rawInput) {\n    try {\n      const address = web3.utils.toChecksumAddress(rawInput);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Header, {\n      as: \"h3\",\n      content: \"Create Document Request!\"\n    }), __jsx(Grid, null, __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(Message, {\n      attached: true //   style={{ width: \"60%\" }}\n      ,\n      header: \"Welcome To Document Request Page\",\n      content: \"Fill out the form below to create a request asking for documents\"\n    }), __jsx(Form, {\n      error: !!this.state.errMessage,\n      onSubmit: this.onSubmit,\n      className: \"attached segment\"\n    }, __jsx(Form.Field, null, __jsx(Form.Input, {\n      error: !this.state.errorAddress ? null : {\n        content: this.state.errorAddress,\n        pointing: \"above\"\n      },\n      label: \"User's Address\",\n      onKeyUp: this.validation,\n      type: \"text\",\n      value: this.state.UserAddress,\n      onChange: event => {\n        this.setState({\n          UserAddress: event.target.value\n        });\n      },\n      placeholder: \"Enter User's Address\"\n    }), __jsx(Form.Input, {\n      error: !this.state.errorRequestedby ? null : {\n        content: this.state.errorRequestedby,\n        pointing: \"above\"\n      },\n      label: \"Name Of Your Organisation\",\n      type: \"text\",\n      onKeyUp: this.validation,\n      value: this.state.requestedBy,\n      onChange: event => {\n        this.setState({\n          requestedBy: event.target.value\n        });\n      },\n      placeholder: \"Enter Your Orgnisation's Name\"\n    })), __jsx(Message, {\n      info: true,\n      header: \"Please Double Check The Form\",\n      content: \"Every operation that make a change in the document cost money!\"\n    }), __jsx(Message, {\n      error: true,\n      header: \"There was some errors with your submission\",\n      content: this.state.errMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      disabled: this.state.loading,\n      primary: true\n    }, \"Create Wallet\"))), __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(Segment, {\n      style: {\n        backgroundColor: \"#6886c5\",\n        height: \"100%\",\n        textAlign: \"center\"\n      }\n    }, __jsx(\"div\", {\n      style: {\n        textAlign: \"center\",\n        position: \"relative\",\n        top: \"20%\"\n      }\n    }, __jsx(\"p\", {\n      style: {\n        color: \"white\",\n        fontSize: \"50px\",\n        fontWeight: \"bold\" // paddingTop: \"20%\",\n\n      }\n    }, \"Easy and Secure Way\", __jsx(\"br\", null), \"For Sharing Documents!\"))))));\n  }\n\n}\n\nexport default NewRequest;","map":{"version":3,"sources":["/home/sahil/Documents/Project/Capstone/Identity-Management/pages/company/newrequest.js"],"names":["React","Component","web3","instance","Layout","Form","Header","Grid","Button","Segment","Message","NewRequest","errMessage","loading","UserAddress","requestedBy","errorAddress","errorRequestedby","setState","state","address","bool","utils","isAddress","console","log","isAlpha","input","pattern","test","isValidAddress","rawInput","toChecksumAddress","e","render","onSubmit","content","pointing","validation","event","target","value","backgroundColor","height","textAlign","position","top","color","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport web3 from \"../../ethereum/web3\";\nimport instance from \"../../ethereum/compiledID\";\nimport Layout from \"../../components/Layout\";\nimport {\n  Form,\n  Header,\n  Grid,\n  Button,\n  Segment,\n  Message,\n} from \"semantic-ui-react\";\n\nclass NewRequest extends Component {\n  state = {\n    errMessage: \"\",\n    loading: false,\n    UserAddress: null,\n    requestedBy: null,\n    errorAddress: null,\n    errorRequestedby: null,\n  };\n\n  isAlpha(input) {\n    var pattern = /^[^\\s][a-zA-Z ]*$/;\n    return pattern.test(input);\n  }\n\n  isValidAddress(rawInput) {\n    try {\n      const address = web3.utils.toChecksumAddress(rawInput);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  validation = () => {\n    this.setState({ errorAddress: null, errorRequestedby: null });\n    //Required\n    // For Addtress field!\n    if (!this.state.UserAddress) {\n      this.setState({ errorAddress: \"Required Fields!\" });\n    } else {\n      const address = this.state.UserAddress;\n      let bool = web3.utils.isAddress(address);\n      console.log(bool);\n\n      if (!bool) {\n        this.setState({ errorAddress: \"Enter a valid User Address!\" });\n      }\n    }\n    // For RequestedBy Field\n    if (!this.state.requestedBy) {\n      this.setState({ errorRequestedby: \"Required Fields!\" });\n    } else {\n      var bool = this.isAlpha(this.state.requestedBy);\n      if (!bool) {\n        this.setState({ errorRequestedby: \"Enter a valid Name!\" });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Header as=\"h3\" content=\"Create Document Request!\" />\n\n        <Grid>\n          <Grid.Column width={8}>\n            <Message\n              attached\n              //   style={{ width: \"60%\" }}\n              header=\"Welcome To Document Request Page\"\n              content=\"Fill out the form below to create a request asking for documents\"\n            />\n            <Form\n              error={!!this.state.errMessage}\n              onSubmit={this.onSubmit}\n              className=\"attached segment\"\n            >\n              <Form.Field>\n                <Form.Input\n                  error={\n                    !this.state.errorAddress\n                      ? null\n                      : {\n                          content: this.state.errorAddress,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"User's Address\"\n                  onKeyUp={this.validation}\n                  type=\"text\"\n                  value={this.state.UserAddress}\n                  onChange={(event) => {\n                    this.setState({ UserAddress: event.target.value });\n                  }}\n                  placeholder=\"Enter User's Address\"\n                />\n                <Form.Input\n                  error={\n                    !this.state.errorRequestedby\n                      ? null\n                      : {\n                          content: this.state.errorRequestedby,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Name Of Your Organisation\"\n                  type=\"text\"\n                  onKeyUp={this.validation}\n                  value={this.state.requestedBy}\n                  onChange={(event) => {\n                    this.setState({ requestedBy: event.target.value });\n                  }}\n                  placeholder=\"Enter Your Orgnisation's Name\"\n                />\n              </Form.Field>\n              <Message\n                info\n                header=\"Please Double Check The Form\"\n                content=\"Every operation that make a change in the document cost money!\"\n              />\n              <Message\n                error\n                header=\"There was some errors with your submission\"\n                content={this.state.errMessage}\n              />\n              <Button\n                loading={this.state.loading}\n                disabled={this.state.loading}\n                primary\n              >\n                Create Wallet\n              </Button>\n            </Form>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Segment\n              style={{\n                backgroundColor: \"#6886c5\",\n                height: \"100%\",\n                textAlign: \"center\",\n              }}\n            >\n              <div\n                style={{\n                  textAlign: \"center\",\n                  position: \"relative\",\n                  top: \"20%\",\n                }}\n              >\n                <p\n                  style={{\n                    color: \"white\",\n                    fontSize: \"50px\",\n                    fontWeight: \"bold\",\n                    // paddingTop: \"20%\",\n                  }}\n                >\n                  Easy and Secure Way\n                  <br />\n                  For Sharing Documents!\n                </p>\n                {/* <p\n                  style={{\n                    // position: \"relative\",\n                    color: \"white\",\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    // bottom: \"15%\",\n                  }}\n                ></p> */}\n              </div>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default NewRequest;\n"]},"metadata":{},"sourceType":"module"}