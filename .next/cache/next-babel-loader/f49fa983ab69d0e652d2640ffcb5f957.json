{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Input, Header, Button, Message, Grid, Segment } from \"semantic-ui-react\";\n\nvar AddUser = /*#__PURE__*/function (_Component) {\n  _inherits(AddUser, _Component);\n\n  var _super = _createSuper(AddUser);\n\n  function AddUser() {\n    var _this;\n\n    _classCallCheck(this, AddUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: \"\",\n      email: \"\",\n      number: \"\",\n      errorName: \"\",\n      errorEmail: \"\",\n      errorNumber: \"\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        errorName: \"\",\n        errorEmail: \"\",\n        errorNumber: \"\"\n      });\n\n      var errorName;\n      var errorEmail;\n      var errorNumber; //Required\n      // For name field!\n\n      if (!_this.state.name) {\n        errorName = \"Required Fields!\";\n\n        _this.setState({\n          errorName: errorName\n        });\n      } else {\n        var bool = _this.isAlpha(_this.state.name);\n\n        if (!bool) {\n          _this.setState({\n            errorName: \"Name field can only contain alphabets!\"\n          });\n        }\n      } // For Email Field\n\n\n      if (!_this.state.email) {\n        errorEmail = \"Required Fields!\";\n\n        _this.setState({\n          errorEmail: errorEmail\n        });\n      } else {\n        var bool = _this.isEmail(_this.state.email);\n\n        if (!bool) {\n          _this.setState({\n            errorEmail: \"Enter a valid email id!\"\n          });\n        }\n      } // For Number field\n\n\n      if (!_this.state.number) {\n        errorNumber = \"Required Fields!\";\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(AddUser, [{\n    key: \"isAlpha\",\n    value: function isAlpha(input) {\n      var pattern = /^[a-zA-Z ]+$/;\n      return pattern.test(input);\n    }\n  }, {\n    key: \"isEmail\",\n    value: function isEmail(input) {\n      var pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n      return pattern.test(input);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Header, {\n        as: \"h3\",\n        content: \"Create new wallet\"\n      }), __jsx(Grid, null, __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(Message, {\n        attached: true //   style={{ width: \"60%\" }}\n        ,\n        header: \"Welcome to our site!\",\n        content: \"Fill out the form below to sign-up for a new account\"\n      }), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        className: \"attached segment\"\n      }, __jsx(Form.Field, null, __jsx(Form.Input, {\n        error: !this.state.errorName ? null : {\n          content: this.state.errorName,\n          pointing: \"above\"\n        },\n        label: \"Full name\",\n        type: \"text\",\n        value: this.state.name,\n        onChange: function onChange(event) {\n          _this2.setState({\n            name: event.target.value\n          });\n        },\n        placeholder: \"Enter full name\"\n      }), __jsx(Form.Input, {\n        error: !this.state.errorEmail ? null : {\n          content: this.state.errorEmail,\n          pointing: \"above\"\n        },\n        label: \"Email\",\n        type: \"text\",\n        value: this.state.email,\n        onChange: function onChange(event) {\n          _this2.setState({\n            email: event.target.value\n          });\n        },\n        placeholder: \"Enter email ID\"\n      }), __jsx(Form.Input, {\n        error: !this.state.errorNumber ? null : {\n          content: this.state.errorNumber,\n          pointing: \"above\"\n        },\n        label: \"Mobile number\",\n        value: this.state.number,\n        onChange: function onChange(event) {\n          _this2.setState({\n            number: event.target.value\n          });\n        },\n        placeholder: \"Enter Mobile Number\"\n      })), __jsx(Button, {\n        loading: this.state.loading,\n        disabled: this.state.loading,\n        primary: true\n      }, \"Create Wallet\"))), __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(Segment, {\n        style: {\n          backgroundColor: \"#6886c5\",\n          height: \"100%\",\n          textAlign: \"center\"\n        }\n      }, __jsx(\"div\", {\n        style: {\n          textAlign: \"center\",\n          position: \"relative\",\n          top: \"20%\"\n        }\n      }, __jsx(\"p\", {\n        style: {\n          color: \"white\",\n          fontSize: \"50px\",\n          fontWeight: \"bold\" // paddingTop: \"20%\",\n\n        }\n      }, \"Create You Wallet\", __jsx(\"br\", null), \"Keep Your Documents Safe!\"))))));\n    }\n  }]);\n\n  return AddUser;\n}(Component);\n\nexport default AddUser;","map":{"version":3,"sources":["/home/sahil/Documents/Project/Capstone/Identity-Management/pages/user/new.js"],"names":["React","Component","Layout","Form","Input","Header","Button","Message","Grid","Segment","AddUser","name","email","number","errorName","errorEmail","errorNumber","loading","event","preventDefault","setState","state","bool","isAlpha","isEmail","input","pattern","test","onSubmit","content","pointing","target","value","backgroundColor","height","textAlign","position","top","color","fontSize","fontWeight"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,IANF,EAOEC,OAPF,QAQO,mBARP;;IAUMC,O;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,SAAS,EAAE,EAJL;AAKNC,MAAAA,UAAU,EAAE,EALN;AAMNC,MAAAA,WAAW,EAAE,EANP;AAONC,MAAAA,OAAO,EAAE;AAPH,K;;+DAoBG,UAACC,KAAD,EAAW;AACpBA,MAAAA,KAAK,CAACC,cAAN;;AAEA,YAAKC,QAAL,CAAc;AAAEN,QAAAA,SAAS,EAAE,EAAb;AAAiBC,QAAAA,UAAU,EAAE,EAA7B;AAAiCC,QAAAA,WAAW,EAAE;AAA9C,OAAd;;AAEA,UAAIF,SAAJ;AACA,UAAIC,UAAJ;AACA,UAAIC,WAAJ,CAPoB,CAQpB;AAEA;;AACA,UAAI,CAAC,MAAKK,KAAL,CAAWV,IAAhB,EAAsB;AACpBG,QAAAA,SAAS,GAAG,kBAAZ;;AACA,cAAKM,QAAL,CAAc;AAAEN,UAAAA,SAAS,EAATA;AAAF,SAAd;AACD,OAHD,MAGO;AACL,YAAIQ,IAAI,GAAG,MAAKC,OAAL,CAAa,MAAKF,KAAL,CAAWV,IAAxB,CAAX;;AACA,YAAI,CAACW,IAAL,EAAW;AACT,gBAAKF,QAAL,CAAc;AAAEN,YAAAA,SAAS,EAAE;AAAb,WAAd;AACD;AACF,OAnBmB,CAqBpB;;;AACA,UAAI,CAAC,MAAKO,KAAL,CAAWT,KAAhB,EAAuB;AACrBG,QAAAA,UAAU,GAAG,kBAAb;;AACA,cAAKK,QAAL,CAAc;AAAEL,UAAAA,UAAU,EAAVA;AAAF,SAAd;AACD,OAHD,MAGO;AACL,YAAIO,IAAI,GAAG,MAAKE,OAAL,CAAa,MAAKH,KAAL,CAAWT,KAAxB,CAAX;;AACA,YAAI,CAACU,IAAL,EAAW;AACT,gBAAKF,QAAL,CAAc;AAAEL,YAAAA,UAAU,EAAE;AAAd,WAAd;AACD;AACF,OA9BmB,CAgCpB;;;AACA,UAAI,CAAC,MAAKM,KAAL,CAAWR,MAAhB,EAAwB;AACtBG,QAAAA,WAAW,GAAG,kBAAd;AACD;AACF,K;;;;;;;4BA9COS,K,EAAO;AACb,UAAIC,OAAO,GAAG,cAAd;AACA,aAAOA,OAAO,CAACC,IAAR,CAAaF,KAAb,CAAP;AACD;;;4BAEOA,K,EAAO;AACb,UAAIC,OAAO,GAAG,4DAAd;AACA,aAAOA,OAAO,CAACC,IAAR,CAAaF,KAAb,CAAP;AACD;;;6BAuCQ;AAAA;;AACP,aACE,MAAC,MAAD,QACE,MAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,OAAO,EAAC;AAAxB,QADF,EAGE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACE,MAAC,OAAD;AACE,QAAA,QAAQ,MADV,CAEE;AAFF;AAGE,QAAA,MAAM,EAAC,sBAHT;AAIE,QAAA,OAAO,EAAC;AAJV,QADF,EAOE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKG,QAArB;AAA+B,QAAA,SAAS,EAAC;AAAzC,SACE,MAAC,IAAD,CAAM,KAAN,QACE,MAAC,IAAD,CAAM,KAAN;AACE,QAAA,KAAK,EACH,CAAC,KAAKP,KAAL,CAAWP,SAAZ,GACI,IADJ,GAEI;AACEe,UAAAA,OAAO,EAAE,KAAKR,KAAL,CAAWP,SADtB;AAEEgB,UAAAA,QAAQ,EAAE;AAFZ,SAJR;AASE,QAAA,KAAK,EAAC,WATR;AAUE,QAAA,IAAI,EAAC,MAVP;AAWE,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWV,IAXpB;AAYE,QAAA,QAAQ,EAAE,kBAACO,KAAD,EAAW;AACnB,UAAA,MAAI,CAACE,QAAL,CAAc;AAAET,YAAAA,IAAI,EAAEO,KAAK,CAACa,MAAN,CAAaC;AAArB,WAAd;AACD,SAdH;AAeE,QAAA,WAAW,EAAC;AAfd,QADF,EAkBE,MAAC,IAAD,CAAM,KAAN;AACE,QAAA,KAAK,EACH,CAAC,KAAKX,KAAL,CAAWN,UAAZ,GACI,IADJ,GAEI;AACEc,UAAAA,OAAO,EAAE,KAAKR,KAAL,CAAWN,UADtB;AAEEe,UAAAA,QAAQ,EAAE;AAFZ,SAJR;AASE,QAAA,KAAK,EAAC,OATR;AAUE,QAAA,IAAI,EAAC,MAVP;AAWE,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWT,KAXpB;AAYE,QAAA,QAAQ,EAAE,kBAACM,KAAD,EAAW;AACnB,UAAA,MAAI,CAACE,QAAL,CAAc;AAAER,YAAAA,KAAK,EAAEM,KAAK,CAACa,MAAN,CAAaC;AAAtB,WAAd;AACD,SAdH;AAeE,QAAA,WAAW,EAAC;AAfd,QAlBF,EAmCE,MAAC,IAAD,CAAM,KAAN;AACE,QAAA,KAAK,EACH,CAAC,KAAKX,KAAL,CAAWL,WAAZ,GACI,IADJ,GAEI;AACEa,UAAAA,OAAO,EAAE,KAAKR,KAAL,CAAWL,WADtB;AAEEc,UAAAA,QAAQ,EAAE;AAFZ,SAJR;AASE,QAAA,KAAK,EAAC,eATR;AAUE,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWR,MAVpB;AAWE,QAAA,QAAQ,EAAE,kBAACK,KAAD,EAAW;AACnB,UAAA,MAAI,CAACE,QAAL,CAAc;AAAEP,YAAAA,MAAM,EAAEK,KAAK,CAACa,MAAN,CAAaC;AAAvB,WAAd;AACD,SAbH;AAcE,QAAA,WAAW,EAAC;AAdd,QAnCF,CADF,EA+DE,MAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWJ,OADtB;AAEE,QAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWJ,OAFvB;AAGE,QAAA,OAAO;AAHT,yBA/DF,CAPF,CADF,EAgFE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAApB,SACE,MAAC,OAAD;AACE,QAAA,KAAK,EAAE;AACLgB,UAAAA,eAAe,EAAE,SADZ;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,SAAS,EAAE;AAHN;AADT,SAOE;AACE,QAAA,KAAK,EAAE;AACLA,UAAAA,SAAS,EAAE,QADN;AAELC,UAAAA,QAAQ,EAAE,UAFL;AAGLC,UAAAA,GAAG,EAAE;AAHA;AADT,SAOE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,OADF;AAELC,UAAAA,QAAQ,EAAE,MAFL;AAGLC,UAAAA,UAAU,EAAE,MAHP,CAIL;;AAJK;AADT,8BASE,iBATF,8BAPF,CAPF,CADF,CAhFF,CAHF,CADF;AA8HD;;;;EAzLmBvC,S;;AA4LtB,eAAeS,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport {\n  Form,\n  Input,\n  Header,\n  Button,\n  Message,\n  Grid,\n  Segment,\n} from \"semantic-ui-react\";\n\nclass AddUser extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    number: \"\",\n    errorName: \"\",\n    errorEmail: \"\",\n    errorNumber: \"\",\n    loading: false,\n  };\n\n  isAlpha(input) {\n    var pattern = /^[a-zA-Z ]+$/;\n    return pattern.test(input);\n  }\n\n  isEmail(input) {\n    var pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n    return pattern.test(input);\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState({ errorName: \"\", errorEmail: \"\", errorNumber: \"\" });\n\n    let errorName;\n    let errorEmail;\n    let errorNumber;\n    //Required\n\n    // For name field!\n    if (!this.state.name) {\n      errorName = \"Required Fields!\";\n      this.setState({ errorName });\n    } else {\n      var bool = this.isAlpha(this.state.name);\n      if (!bool) {\n        this.setState({ errorName: \"Name field can only contain alphabets!\" });\n      }\n    }\n\n    // For Email Field\n    if (!this.state.email) {\n      errorEmail = \"Required Fields!\";\n      this.setState({ errorEmail });\n    } else {\n      var bool = this.isEmail(this.state.email);\n      if (!bool) {\n        this.setState({ errorEmail: \"Enter a valid email id!\" });\n      }\n    }\n\n    // For Number field\n    if (!this.state.number) {\n      errorNumber = \"Required Fields!\";\n    }\n  };\n  render() {\n    return (\n      <Layout>\n        <Header as=\"h3\" content=\"Create new wallet\" />\n\n        <Grid>\n          <Grid.Column width={8}>\n            <Message\n              attached\n              //   style={{ width: \"60%\" }}\n              header=\"Welcome to our site!\"\n              content=\"Fill out the form below to sign-up for a new account\"\n            />\n            <Form onSubmit={this.onSubmit} className=\"attached segment\">\n              <Form.Field>\n                <Form.Input\n                  error={\n                    !this.state.errorName\n                      ? null\n                      : {\n                          content: this.state.errorName,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Full name\"\n                  type=\"text\"\n                  value={this.state.name}\n                  onChange={(event) => {\n                    this.setState({ name: event.target.value });\n                  }}\n                  placeholder=\"Enter full name\"\n                />\n                <Form.Input\n                  error={\n                    !this.state.errorEmail\n                      ? null\n                      : {\n                          content: this.state.errorEmail,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Email\"\n                  type=\"text\"\n                  value={this.state.email}\n                  onChange={(event) => {\n                    this.setState({ email: event.target.value });\n                  }}\n                  placeholder=\"Enter email ID\"\n                />\n                <Form.Input\n                  error={\n                    !this.state.errorNumber\n                      ? null\n                      : {\n                          content: this.state.errorNumber,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Mobile number\"\n                  value={this.state.number}\n                  onChange={(event) => {\n                    this.setState({ number: event.target.value });\n                  }}\n                  placeholder=\"Enter Mobile Number\"\n                />\n              </Form.Field>\n              {/* <Message\n                error\n                header=\"There was some errors with your submission\"\n                list={[\n                  this.state.errorName,\n                  this.state.errorEmail,\n                  this.state.errorNumber,\n                ]}\n              /> */}\n\n              <Button\n                loading={this.state.loading}\n                disabled={this.state.loading}\n                primary\n              >\n                Create Wallet\n              </Button>\n            </Form>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Segment\n              style={{\n                backgroundColor: \"#6886c5\",\n                height: \"100%\",\n                textAlign: \"center\",\n              }}\n            >\n              <div\n                style={{\n                  textAlign: \"center\",\n                  position: \"relative\",\n                  top: \"20%\",\n                }}\n              >\n                <p\n                  style={{\n                    color: \"white\",\n                    fontSize: \"50px\",\n                    fontWeight: \"bold\",\n                    // paddingTop: \"20%\",\n                  }}\n                >\n                  Create You Wallet\n                  <br />\n                  Keep Your Documents Safe!\n                </p>\n                {/* <p\n                  style={{\n                    // position: \"relative\",\n                    color: \"white\",\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    // bottom: \"15%\",\n                  }}\n                ></p> */}\n              </div>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}