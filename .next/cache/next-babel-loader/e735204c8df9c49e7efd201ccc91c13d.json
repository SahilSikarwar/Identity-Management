{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport web3 from \"../../ethereum/web3\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport Layout from \"../../components/Layout\";\nimport { Table, Header, Grid, Button, Segment, Message, Tab } from \"semantic-ui-react\";\n\nclass ViewRequest extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderRows\", async () => {\n      return requests.map((request, index) => {\n        return __jsx(RequestRows, {\n          key: index,\n          id: index,\n          request: request\n        });\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    const accounts = await web3.eth.getAccounts();\n    const count = await instanceID.methods.viewRequestLength(\"0xbdf3707854F749E745CDd667D020a0671433C6aE\").call();\n    const requests = await Promise.all(Array(parseInt(count)).fill().map((element, index) => {\n      return instanceID.methods.viewRequestHeader(accounts[0], index).call();\n    }));\n    return {\n      address,\n      requests,\n      approversCount,\n      requestCount,\n      user\n    };\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    return __jsx(Layout, null, __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"ID\"), __jsx(HeaderCell, null, \"User Address\"), __jsx(HeaderCell, null, \"Approval Status\"), __jsx(HeaderCell, null, \"More info\"))), __jsx(Body, null, this.renderRows())));\n  }\n\n}\n\nexport default ViewRequest;","map":{"version":3,"sources":["/home/sahil/Documents/Project/Capstone/Identity-Management/pages/company/viewrequest.js"],"names":["React","Component","web3","instanceID","Layout","Table","Header","Grid","Button","Segment","Message","Tab","ViewRequest","requests","map","request","index","getInitialProps","props","accounts","eth","getAccounts","count","methods","viewRequestLength","call","Promise","all","Array","parseInt","fill","element","viewRequestHeader","address","approversCount","requestCount","user","render","Row","HeaderCell","Body","renderRows"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,OANF,EAOEC,GAPF,QAQO,mBARP;;AAUA,MAAMC,WAAN,SAA0BX,SAA1B,CAAoC;AAAA;AAAA;;AAAA,wCAqBrB,YAAY;AACvB,aAAOY,QAAQ,CAACC,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACtC,eAAO,MAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,KAAlB;AAAyB,UAAA,EAAE,EAAEA,KAA7B;AAAoC,UAAA,OAAO,EAAED;AAA7C,UAAP;AACD,OAFM,CAAP;AAGD,KAzBiC;AAAA;;AAClC,eAAaE,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,UAAMC,QAAQ,GAAG,MAAMjB,IAAI,CAACkB,GAAL,CAASC,WAAT,EAAvB;AAEA,UAAMC,KAAK,GAAG,MAAMnB,UAAU,CAACoB,OAAX,CACjBC,iBADiB,CACC,4CADD,EAEjBC,IAFiB,EAApB;AAIA,UAAMZ,QAAQ,GAAG,MAAMa,OAAO,CAACC,GAAR,CACrBC,KAAK,CAACC,QAAQ,CAACP,KAAD,CAAT,CAAL,CACGQ,IADH,GAEGhB,GAFH,CAEO,CAACiB,OAAD,EAAUf,KAAV,KAAoB;AACvB,aAAOb,UAAU,CAACoB,OAAX,CACJS,iBADI,CACcb,QAAQ,CAAC,CAAD,CADtB,EAC2BH,KAD3B,EAEJS,IAFI,EAAP;AAGD,KANH,CADqB,CAAvB;AAUA,WAAO;AAAEQ,MAAAA,OAAF;AAAWpB,MAAAA,QAAX;AAAqBqB,MAAAA,cAArB;AAAqCC,MAAAA,YAArC;AAAmDC,MAAAA;AAAnD,KAAP;AACD;;AAQDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE/B,MAAAA,MAAF;AAAUgC,MAAAA,GAAV;AAAeC,MAAAA,UAAf;AAA2BC,MAAAA;AAA3B,QAAoCnC,KAA1C;AAEA,WACE,MAAC,MAAD,QACE,MAAC,KAAD,QACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,UAAD,aADF,EAEE,MAAC,UAAD,uBAFF,EAGE,MAAC,UAAD,0BAHF,EAIE,MAAC,UAAD,oBAJF,CADF,CADF,EASE,MAAC,IAAD,QAAO,KAAKoC,UAAL,EAAP,CATF,CADF,CADF;AAeD;;AA7CiC;;AAgDpC,eAAe7B,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport web3 from \"../../ethereum/web3\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport Layout from \"../../components/Layout\";\nimport {\n  Table,\n  Header,\n  Grid,\n  Button,\n  Segment,\n  Message,\n  Tab,\n} from \"semantic-ui-react\";\n\nclass ViewRequest extends Component {\n  static async getInitialProps(props) {\n    const accounts = await web3.eth.getAccounts();\n\n    const count = await instanceID.methods\n      .viewRequestLength(\"0xbdf3707854F749E745CDd667D020a0671433C6aE\")\n      .call();\n\n    const requests = await Promise.all(\n      Array(parseInt(count))\n        .fill()\n        .map((element, index) => {\n          return instanceID.methods\n            .viewRequestHeader(accounts[0], index)\n            .call();\n        })\n    );\n\n    return { address, requests, approversCount, requestCount, user };\n  }\n\n  renderRows = async () => {\n    return requests.map((request, index) => {\n      return <RequestRows key={index} id={index} request={request} />;\n    });\n  };\n\n  render() {\n    const { Header, Row, HeaderCell, Body } = Table;\n\n    return (\n      <Layout>\n        <Table>\n          <Header>\n            <Row>\n              <HeaderCell>ID</HeaderCell>\n              <HeaderCell>User Address</HeaderCell>\n              <HeaderCell>Approval Status</HeaderCell>\n              <HeaderCell>More info</HeaderCell>\n            </Row>\n          </Header>\n          <Body>{this.renderRows()}</Body>\n        </Table>\n      </Layout>\n    );\n  }\n}\n\nexport default ViewRequest;\n"]},"metadata":{},"sourceType":"module"}