{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport web3 from \"../../ethereum/web3\";\nimport { Form, Input, Header, Button, Message, Grid, Segment } from \"semantic-ui-react\";\n\nclass AddUser extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: \"\",\n      email: \"\",\n      number: \"\",\n      errorName: \"\",\n      errorEmail: \"\",\n      errorNumber: \"\",\n      loading: false,\n      errMessage: \"\"\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errMessage: \"\"\n      });\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n\n      try {\n        const {\n          name,\n          email,\n          number\n        } = this.state;\n        await instanceID.methods.addUser(name, email, number).send({\n          from: accounts[0]\n        });\n      } catch (err) {\n        this.setState({\n          errMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  isAlpha(input) {\n    var pattern = /^[a-zA-Z ]+$/;\n    return pattern.test(input);\n  }\n\n  isEmail(input) {\n    var pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n    return pattern.test(input);\n  }\n\n  isMobileNumber(input) {\n    var pattern = /^([0-9]{10})$/;\n    return pattern.test(input);\n  }\n\n  validation() {\n    this.setState({\n      errorName: \"\",\n      errorEmail: \"\",\n      errorNumber: \"\"\n    });\n    let errorName;\n    let errorEmail;\n    let errorNumber; //Required\n    // For name field!\n\n    if (!this.state.name) {\n      errorName = \"Required Fields!\";\n      this.setState({\n        errorName\n      });\n    } else {\n      var bool = this.isMobileNumber(this.state.number);\n\n      if (!bool) {\n        this.setState({\n          errorNumber: \"Enter a valid mobile number!\"\n        });\n      }\n    } // For Email Field\n\n\n    if (!this.state.email) {\n      errorEmail = \"Required Fields!\";\n      this.setState({\n        errorEmail\n      });\n    } else {\n      var bool = this.isEmail(this.state.email);\n\n      if (!bool) {\n        this.setState({\n          errorEmail: \"Enter a valid email id!\"\n        });\n      }\n    } // For Number field\n\n\n    if (!this.state.number) {\n      errorNumber = \"Required Fields!\";\n      this.setState({\n        errorNumber\n      });\n    } else {\n      var bool = this.isEmail(this.state.email);\n\n      if (!bool) {\n        this.setState({\n          errorEmail: \"Enter a valid email id!\"\n        });\n      }\n    }\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Header, {\n      as: \"h3\",\n      content: \"Create new wallet\"\n    }), __jsx(Grid, null, __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(Message, {\n      attached: true //   style={{ width: \"60%\" }}\n      ,\n      header: \"Welcome to our site!\",\n      content: \"Fill out the form below to sign-up for a new account\"\n    }), __jsx(Form, {\n      error: !!this.state.errMessage,\n      onSubmit: this.onSubmit,\n      className: \"attached segment\"\n    }, __jsx(Form.Field, null, __jsx(Form.Input, {\n      error: !this.state.errorName ? null : {\n        content: this.state.errorName,\n        pointing: \"above\"\n      },\n      label: \"Full name\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: event => {\n        this.setState({\n          name: event.target.value\n        });\n      },\n      placeholder: \"Enter full name\"\n    }), __jsx(Form.Input, {\n      error: !this.state.errorEmail ? null : {\n        content: this.state.errorEmail,\n        pointing: \"above\"\n      },\n      label: \"Email\",\n      type: \"text\",\n      value: this.state.email,\n      onChange: event => {\n        this.setState({\n          email: event.target.value\n        });\n      },\n      placeholder: \"Enter email ID\"\n    }), __jsx(Form.Input, {\n      error: !this.state.errorNumber ? null : {\n        content: this.state.errorNumber,\n        pointing: \"above\"\n      },\n      label: \"Mobile number\",\n      value: this.state.number,\n      onChange: event => {\n        this.setState({\n          number: event.target.value\n        });\n      },\n      placeholder: \"Enter Mobile Number\"\n    })), __jsx(Message, {\n      error: true,\n      header: \"There was some errors with your submission\",\n      content: this.state.errMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      disabled: this.state.loading,\n      primary: true\n    }, \"Create Wallet\"))), __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(Segment, {\n      style: {\n        backgroundColor: \"#6886c5\",\n        height: \"100%\",\n        textAlign: \"center\"\n      }\n    }, __jsx(\"div\", {\n      style: {\n        textAlign: \"center\",\n        position: \"relative\",\n        top: \"20%\"\n      }\n    }, __jsx(\"p\", {\n      style: {\n        color: \"white\",\n        fontSize: \"50px\",\n        fontWeight: \"bold\" // paddingTop: \"20%\",\n\n      }\n    }, \"Create You Wallet\", __jsx(\"br\", null), \"Keep Your Documents Safe!\"))))));\n  }\n\n}\n\nexport default AddUser;","map":{"version":3,"sources":["/home/sahil/Documents/Project/Capstone/Identity-Management/pages/user/new.js"],"names":["React","Component","Layout","instanceID","web3","Form","Input","Header","Button","Message","Grid","Segment","AddUser","name","email","number","errorName","errorEmail","errorNumber","loading","errMessage","event","preventDefault","setState","accounts","eth","getAccounts","console","log","state","methods","addUser","send","from","err","message","isAlpha","input","pattern","test","isEmail","isMobileNumber","validation","bool","render","onSubmit","content","pointing","target","value","backgroundColor","height","textAlign","position","top","color","fontSize","fontWeight"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,IANF,EAOEC,OAPF,QAQO,mBARP;;AAUA,MAAMC,OAAN,SAAsBX,SAAtB,CAAgC;AAAA;AAAA;;AAAA,mCACtB;AACNY,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,SAAS,EAAE,EAJL;AAKNC,MAAAA,UAAU,EAAE,EALN;AAMNC,MAAAA,WAAW,EAAE,EANP;AAONC,MAAAA,OAAO,EAAE,KAPH;AAQNC,MAAAA,UAAU,EAAE;AARN,KADsB;;AAAA,sCAqEnB,MAAOC,KAAP,IAAiB;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,UAAU,EAAE;AAA7B,OAAd;AACA,YAAMI,QAAQ,GAAG,MAAMpB,IAAI,CAACqB,GAAL,CAASC,WAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AAEA,UAAI;AACF,cAAM;AAAEX,UAAAA,IAAF;AAAQC,UAAAA,KAAR;AAAeC,UAAAA;AAAf,YAA0B,KAAKc,KAArC;AACA,cAAM1B,UAAU,CAAC2B,OAAX,CAAmBC,OAAnB,CAA2BlB,IAA3B,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDiB,IAAhD,CAAqD;AACzDC,UAAAA,IAAI,EAAET,QAAQ,CAAC,CAAD;AAD2C,SAArD,CAAN;AAGD,OALD,CAKE,OAAOU,GAAP,EAAY;AACZ,aAAKX,QAAL,CAAc;AAAEH,UAAAA,UAAU,EAAEc,GAAG,CAACC;AAAlB,SAAd;AACD;;AACD,WAAKZ,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KArF6B;AAAA;;AAY9BiB,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,QAAIC,OAAO,GAAG,cAAd;AACA,WAAOA,OAAO,CAACC,IAAR,CAAaF,KAAb,CAAP;AACD;;AAEDG,EAAAA,OAAO,CAACH,KAAD,EAAQ;AACb,QAAIC,OAAO,GAAG,4DAAd;AACA,WAAOA,OAAO,CAACC,IAAR,CAAaF,KAAb,CAAP;AACD;;AAEDI,EAAAA,cAAc,CAACJ,KAAD,EAAQ;AACpB,QAAIC,OAAO,GAAG,eAAd;AACA,WAAOA,OAAO,CAACC,IAAR,CAAaF,KAAb,CAAP;AACD;;AAEDK,EAAAA,UAAU,GAAG;AACX,SAAKnB,QAAL,CAAc;AAAEP,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,UAAU,EAAE,EAA7B;AAAiCC,MAAAA,WAAW,EAAE;AAA9C,KAAd;AAEA,QAAIF,SAAJ;AACA,QAAIC,UAAJ;AACA,QAAIC,WAAJ,CALW,CAMX;AAEA;;AACA,QAAI,CAAC,KAAKW,KAAL,CAAWhB,IAAhB,EAAsB;AACpBG,MAAAA,SAAS,GAAG,kBAAZ;AACA,WAAKO,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAHD,MAGO;AACL,UAAI2B,IAAI,GAAG,KAAKF,cAAL,CAAoB,KAAKZ,KAAL,CAAWd,MAA/B,CAAX;;AACA,UAAI,CAAC4B,IAAL,EAAW;AACT,aAAKpB,QAAL,CAAc;AAAEL,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD;AACF,KAjBU,CAmBX;;;AACA,QAAI,CAAC,KAAKW,KAAL,CAAWf,KAAhB,EAAuB;AACrBG,MAAAA,UAAU,GAAG,kBAAb;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAHD,MAGO;AACL,UAAI0B,IAAI,GAAG,KAAKH,OAAL,CAAa,KAAKX,KAAL,CAAWf,KAAxB,CAAX;;AACA,UAAI,CAAC6B,IAAL,EAAW;AACT,aAAKpB,QAAL,CAAc;AAAEN,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD;AACF,KA5BU,CA8BX;;;AACA,QAAI,CAAC,KAAKY,KAAL,CAAWd,MAAhB,EAAwB;AACtBG,MAAAA,WAAW,GAAG,kBAAd;AACA,WAAKK,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACD,KAHD,MAGO;AACL,UAAIyB,IAAI,GAAG,KAAKH,OAAL,CAAa,KAAKX,KAAL,CAAWf,KAAxB,CAAX;;AACA,UAAI,CAAC6B,IAAL,EAAW;AACT,aAAKpB,QAAL,CAAc;AAAEN,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD;AACF;AACF;;AAmBD2B,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD,QACE,MAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,OAAO,EAAC;AAAxB,MADF,EAGE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACE,MAAC,OAAD;AACE,MAAA,QAAQ,MADV,CAEE;AAFF;AAGE,MAAA,MAAM,EAAC,sBAHT;AAIE,MAAA,OAAO,EAAC;AAJV,MADF,EAOE,MAAC,IAAD;AACE,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKf,KAAL,CAAWT,UADtB;AAEE,MAAA,QAAQ,EAAE,KAAKyB,QAFjB;AAGE,MAAA,SAAS,EAAC;AAHZ,OAKE,MAAC,IAAD,CAAM,KAAN,QACE,MAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,EACH,CAAC,KAAKhB,KAAL,CAAWb,SAAZ,GACI,IADJ,GAEI;AACE8B,QAAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWb,SADtB;AAEE+B,QAAAA,QAAQ,EAAE;AAFZ,OAJR;AASE,MAAA,KAAK,EAAC,WATR;AAUE,MAAA,IAAI,EAAC,MAVP;AAWE,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWhB,IAXpB;AAYE,MAAA,QAAQ,EAAGQ,KAAD,IAAW;AACnB,aAAKE,QAAL,CAAc;AAAEV,UAAAA,IAAI,EAAEQ,KAAK,CAAC2B,MAAN,CAAaC;AAArB,SAAd;AACD,OAdH;AAeE,MAAA,WAAW,EAAC;AAfd,MADF,EAkBE,MAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,EACH,CAAC,KAAKpB,KAAL,CAAWZ,UAAZ,GACI,IADJ,GAEI;AACE6B,QAAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWZ,UADtB;AAEE8B,QAAAA,QAAQ,EAAE;AAFZ,OAJR;AASE,MAAA,KAAK,EAAC,OATR;AAUE,MAAA,IAAI,EAAC,MAVP;AAWE,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWf,KAXpB;AAYE,MAAA,QAAQ,EAAGO,KAAD,IAAW;AACnB,aAAKE,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAEO,KAAK,CAAC2B,MAAN,CAAaC;AAAtB,SAAd;AACD,OAdH;AAeE,MAAA,WAAW,EAAC;AAfd,MAlBF,EAmCE,MAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,EACH,CAAC,KAAKpB,KAAL,CAAWX,WAAZ,GACI,IADJ,GAEI;AACE4B,QAAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWX,WADtB;AAEE6B,QAAAA,QAAQ,EAAE;AAFZ,OAJR;AASE,MAAA,KAAK,EAAC,eATR;AAUE,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWd,MAVpB;AAWE,MAAA,QAAQ,EAAGM,KAAD,IAAW;AACnB,aAAKE,QAAL,CAAc;AAAER,UAAAA,MAAM,EAAEM,KAAK,CAAC2B,MAAN,CAAaC;AAAvB,SAAd;AACD,OAbH;AAcE,MAAA,WAAW,EAAC;AAdd,MAnCF,CALF,EAyDE,MAAC,OAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,MAAM,EAAC,4CAFT;AAGE,MAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWT;AAHtB,MAzDF,EA+DE,MAAC,MAAD;AACE,MAAA,OAAO,EAAE,KAAKS,KAAL,CAAWV,OADtB;AAEE,MAAA,QAAQ,EAAE,KAAKU,KAAL,CAAWV,OAFvB;AAGE,MAAA,OAAO;AAHT,uBA/DF,CAPF,CADF,EAgFE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACE,MAAC,OAAD;AACE,MAAA,KAAK,EAAE;AACL+B,QAAAA,eAAe,EAAE,SADZ;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,SAAS,EAAE;AAHN;AADT,OAOE;AACE,MAAA,KAAK,EAAE;AACLA,QAAAA,SAAS,EAAE,QADN;AAELC,QAAAA,QAAQ,EAAE,UAFL;AAGLC,QAAAA,GAAG,EAAE;AAHA;AADT,OAOE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,QAAQ,EAAE,MAFL;AAGLC,QAAAA,UAAU,EAAE,MAHP,CAIL;;AAJK;AADT,4BASE,iBATF,8BAPF,CAPF,CADF,CAhFF,CAHF,CADF;AA8HD;;AArN6B;;AAwNhC,eAAe7C,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport web3 from \"../../ethereum/web3\";\nimport {\n  Form,\n  Input,\n  Header,\n  Button,\n  Message,\n  Grid,\n  Segment,\n} from \"semantic-ui-react\";\n\nclass AddUser extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    number: \"\",\n    errorName: \"\",\n    errorEmail: \"\",\n    errorNumber: \"\",\n    loading: false,\n    errMessage: \"\",\n  };\n\n  isAlpha(input) {\n    var pattern = /^[a-zA-Z ]+$/;\n    return pattern.test(input);\n  }\n\n  isEmail(input) {\n    var pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n    return pattern.test(input);\n  }\n\n  isMobileNumber(input) {\n    var pattern = /^([0-9]{10})$/;\n    return pattern.test(input);\n  }\n\n  validation() {\n    this.setState({ errorName: \"\", errorEmail: \"\", errorNumber: \"\" });\n\n    let errorName;\n    let errorEmail;\n    let errorNumber;\n    //Required\n\n    // For name field!\n    if (!this.state.name) {\n      errorName = \"Required Fields!\";\n      this.setState({ errorName });\n    } else {\n      var bool = this.isMobileNumber(this.state.number);\n      if (!bool) {\n        this.setState({ errorNumber: \"Enter a valid mobile number!\" });\n      }\n    }\n\n    // For Email Field\n    if (!this.state.email) {\n      errorEmail = \"Required Fields!\";\n      this.setState({ errorEmail });\n    } else {\n      var bool = this.isEmail(this.state.email);\n      if (!bool) {\n        this.setState({ errorEmail: \"Enter a valid email id!\" });\n      }\n    }\n\n    // For Number field\n    if (!this.state.number) {\n      errorNumber = \"Required Fields!\";\n      this.setState({ errorNumber });\n    } else {\n      var bool = this.isEmail(this.state.email);\n      if (!bool) {\n        this.setState({ errorEmail: \"Enter a valid email id!\" });\n      }\n    }\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n\n    this.setState({ loading: true, errMessage: \"\" });\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    try {\n      const { name, email, number } = this.state;\n      await instanceID.methods.addUser(name, email, number).send({\n        from: accounts[0],\n      });\n    } catch (err) {\n      this.setState({ errMessage: err.message });\n    }\n    this.setState({ loading: false });\n  };\n  render() {\n    return (\n      <Layout>\n        <Header as=\"h3\" content=\"Create new wallet\" />\n\n        <Grid>\n          <Grid.Column width={8}>\n            <Message\n              attached\n              //   style={{ width: \"60%\" }}\n              header=\"Welcome to our site!\"\n              content=\"Fill out the form below to sign-up for a new account\"\n            />\n            <Form\n              error={!!this.state.errMessage}\n              onSubmit={this.onSubmit}\n              className=\"attached segment\"\n            >\n              <Form.Field>\n                <Form.Input\n                  error={\n                    !this.state.errorName\n                      ? null\n                      : {\n                          content: this.state.errorName,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Full name\"\n                  type=\"text\"\n                  value={this.state.name}\n                  onChange={(event) => {\n                    this.setState({ name: event.target.value });\n                  }}\n                  placeholder=\"Enter full name\"\n                />\n                <Form.Input\n                  error={\n                    !this.state.errorEmail\n                      ? null\n                      : {\n                          content: this.state.errorEmail,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Email\"\n                  type=\"text\"\n                  value={this.state.email}\n                  onChange={(event) => {\n                    this.setState({ email: event.target.value });\n                  }}\n                  placeholder=\"Enter email ID\"\n                />\n                <Form.Input\n                  error={\n                    !this.state.errorNumber\n                      ? null\n                      : {\n                          content: this.state.errorNumber,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Mobile number\"\n                  value={this.state.number}\n                  onChange={(event) => {\n                    this.setState({ number: event.target.value });\n                  }}\n                  placeholder=\"Enter Mobile Number\"\n                />\n              </Form.Field>\n              <Message\n                error\n                header=\"There was some errors with your submission\"\n                content={this.state.errMessage}\n              />\n\n              <Button\n                loading={this.state.loading}\n                disabled={this.state.loading}\n                primary\n              >\n                Create Wallet\n              </Button>\n            </Form>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Segment\n              style={{\n                backgroundColor: \"#6886c5\",\n                height: \"100%\",\n                textAlign: \"center\",\n              }}\n            >\n              <div\n                style={{\n                  textAlign: \"center\",\n                  position: \"relative\",\n                  top: \"20%\",\n                }}\n              >\n                <p\n                  style={{\n                    color: \"white\",\n                    fontSize: \"50px\",\n                    fontWeight: \"bold\",\n                    // paddingTop: \"20%\",\n                  }}\n                >\n                  Create You Wallet\n                  <br />\n                  Keep Your Documents Safe!\n                </p>\n                {/* <p\n                  style={{\n                    // position: \"relative\",\n                    color: \"white\",\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    // bottom: \"15%\",\n                  }}\n                ></p> */}\n              </div>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}