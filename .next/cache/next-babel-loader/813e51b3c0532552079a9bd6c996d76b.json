{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport web3 from \"../../ethereum/web3\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport Layout from \"../../components/Layout\";\nimport { Table, Header, Grid, Button, Segment, Message, Tab } from \"semantic-ui-react\";\n\nclass ViewRequest extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderRows\", async () => {\n      const accounts = await web3.eth.getAccounts();\n      const requestCount = instanceID.methods.viewRequestLength(accounts[0]).call(); // const requests = await Promise.all(\n      //   Array(parseInt(requestCount))\n      //     .fill()\n      //     .map((element, index) => {\n      //       return instanceID.methods\n      //         .viewRequestHeader(accounts[0], index)\n      //         .call();\n      //     })\n      // );\n\n      console.log(requestCount); // return this.props.requests.map((request, index) => {\n      //   return (\n      //     <RequestRows\n      //       key={index}\n      //       id={index}\n      //       request={request}\n      //       address={this.props.address}\n      //       approversCount={this.props.approversCount}\n      //     />\n      //   );\n      // });\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    return __jsx(Layout, null, __jsx(Button, {\n      onClick: this.renderRows\n    }), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"User Address\"), __jsx(HeaderCell, null, \"Approval Status\"), __jsx(HeaderCell, null, \"More info\"))), __jsx(Body, null)));\n  }\n\n}\n\nexport default ViewRequest;","map":{"version":3,"sources":["/home/sahil/Documents/Project/Capstone/Identity-Management/pages/company/viewrequest.js"],"names":["React","Component","web3","instanceID","Layout","Table","Header","Grid","Button","Segment","Message","Tab","ViewRequest","accounts","eth","getAccounts","requestCount","methods","viewRequestLength","call","console","log","render","Row","HeaderCell","Body","renderRows"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,OANF,EAOEC,GAPF,QAQO,mBARP;;AAUA,MAAMC,WAAN,SAA0BX,SAA1B,CAAoC;AAAA;AAAA;;AAAA,wCACrB,YAAY;AACvB,YAAMY,QAAQ,GAAG,MAAMX,IAAI,CAACY,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMC,YAAY,GAAGb,UAAU,CAACc,OAAX,CAClBC,iBADkB,CACAL,QAAQ,CAAC,CAAD,CADR,EAElBM,IAFkB,EAArB,CAFuB,CAMvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ,EAfuB,CAiBvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KA7BiC;AAAA;;AA+BlCM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,MAAF;AAAUiB,MAAAA,GAAV;AAAeC,MAAAA,UAAf;AAA2BC,MAAAA;AAA3B,QAAoCpB,KAA1C;AAEA,WACE,MAAC,MAAD,QACE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKqB;AAAtB,MADF,EAEE,MAAC,KAAD,QACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,UAAD,uBADF,EAEE,MAAC,UAAD,0BAFF,EAGE,MAAC,UAAD,oBAHF,CADF,CADF,EAQE,MAAC,IAAD,OARF,CAFF,CADF;AAeD;;AAjDiC;;AAoDpC,eAAed,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport web3 from \"../../ethereum/web3\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport Layout from \"../../components/Layout\";\nimport {\n  Table,\n  Header,\n  Grid,\n  Button,\n  Segment,\n  Message,\n  Tab,\n} from \"semantic-ui-react\";\n\nclass ViewRequest extends Component {\n  renderRows = async () => {\n    const accounts = await web3.eth.getAccounts();\n    const requestCount = instanceID.methods\n      .viewRequestLength(accounts[0])\n      .call();\n\n    // const requests = await Promise.all(\n    //   Array(parseInt(requestCount))\n    //     .fill()\n    //     .map((element, index) => {\n    //       return instanceID.methods\n    //         .viewRequestHeader(accounts[0], index)\n    //         .call();\n    //     })\n    // );\n    console.log(requestCount);\n\n    // return this.props.requests.map((request, index) => {\n    //   return (\n    //     <RequestRows\n    //       key={index}\n    //       id={index}\n    //       request={request}\n    //       address={this.props.address}\n    //       approversCount={this.props.approversCount}\n    //     />\n    //   );\n    // });\n  };\n\n  render() {\n    const { Header, Row, HeaderCell, Body } = Table;\n\n    return (\n      <Layout>\n        <Button onClick={this.renderRows}></Button>\n        <Table>\n          <Header>\n            <Row>\n              <HeaderCell>User Address</HeaderCell>\n              <HeaderCell>Approval Status</HeaderCell>\n              <HeaderCell>More info</HeaderCell>\n            </Row>\n          </Header>\n          <Body></Body>\n        </Table>\n      </Layout>\n    );\n  }\n}\n\nexport default ViewRequest;\n"]},"metadata":{},"sourceType":"module"}