{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport { Form, Input, Header, Button, Message, Grid, Segment } from \"semantic-ui-react\";\nimport Web3 from \"../../ethereum/web3\";\n\nvar AddUser = /*#__PURE__*/function (_Component) {\n  _inherits(AddUser, _Component);\n\n  var _super = _createSuper(AddUser);\n\n  function AddUser() {\n    var _this;\n\n    _classCallCheck(this, AddUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: \"\",\n      email: \"\",\n      number: \"\",\n      errorName: \"\",\n      errorEmail: \"\",\n      errorNumber: \"\",\n      loading: false,\n      errMessage: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var errorName, errorEmail, errorNumber, bool, accounts, _this$state, name, email, number;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                errorName: \"\",\n                errorEmail: \"\",\n                errorNumber: \"\"\n              });\n\n              //Required\n              // For name field!\n              if (!_this.state.name) {\n                errorName = \"Required Fields!\";\n\n                _this.setState({\n                  errorName: errorName\n                });\n              } else {\n                bool = _this.isMobileNumber(_this.state.number);\n\n                if (!bool) {\n                  _this.setState({\n                    errorNumber: \"Enter a valid mobile number!\"\n                  });\n                }\n              } // For Email Field\n\n\n              if (!_this.state.email) {\n                errorEmail = \"Required Fields!\";\n\n                _this.setState({\n                  errorEmail: errorEmail\n                });\n              } else {\n                bool = _this.isEmail(_this.state.email);\n\n                if (!bool) {\n                  _this.setState({\n                    errorEmail: \"Enter a valid email id!\"\n                  });\n                }\n              } // For Number field\n\n\n              if (!_this.state.number) {\n                errorNumber = \"Required Fields!\";\n\n                _this.setState({\n                  errorNumber: errorNumber\n                });\n              } else {\n                bool = _this.isEmail(_this.state.email);\n\n                if (!bool) {\n                  _this.setState({\n                    errorEmail: \"Enter a valid email id!\"\n                  });\n                }\n              }\n\n              _this.setState({\n                loading: true,\n                errMessage: \"\"\n              });\n\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 8:\n              accounts = _context.sent;\n              _context.prev = 9;\n              _this$state = _this.state, name = _this$state.name, email = _this$state.email, number = _this$state.number;\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(instanceID.methods.addUser(name, email, number).send({\n                from: accounts[0]\n              }));\n\n            case 13:\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](9);\n\n              _this.setState({\n                errMessage: _context.t0.message\n              });\n\n            case 18:\n              _context.next = 20;\n              return _regeneratorRuntime.awrap(camp);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[9, 15]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(AddUser, [{\n    key: \"isAlpha\",\n    value: function isAlpha(input) {\n      var pattern = /^[a-zA-Z ]+$/;\n      return pattern.test(input);\n    }\n  }, {\n    key: \"isEmail\",\n    value: function isEmail(input) {\n      var pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n      return pattern.test(input);\n    }\n  }, {\n    key: \"isMobileNumber\",\n    value: function isMobileNumber(input) {\n      var pattern = /^([0-9]{10})$/;\n      return pattern.test(input);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Header, {\n        as: \"h3\",\n        content: \"Create new wallet\"\n      }), __jsx(Grid, null, __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(Message, {\n        attached: true //   style={{ width: \"60%\" }}\n        ,\n        header: \"Welcome to our site!\",\n        content: \"Fill out the form below to sign-up for a new account\"\n      }), __jsx(Form, {\n        error: !!this.state.errMessage,\n        onSubmit: this.onSubmit,\n        className: \"attached segment\"\n      }, __jsx(Form.Field, null, __jsx(Form.Input, {\n        error: !this.state.errorName ? null : {\n          content: this.state.errorName,\n          pointing: \"above\"\n        },\n        label: \"Full name\",\n        type: \"text\",\n        value: this.state.name,\n        onChange: function onChange(event) {\n          _this2.setState({\n            name: event.target.value\n          });\n        },\n        placeholder: \"Enter full name\"\n      }), __jsx(Form.Input, {\n        error: !this.state.errorEmail ? null : {\n          content: this.state.errorEmail,\n          pointing: \"above\"\n        },\n        label: \"Email\",\n        type: \"text\",\n        value: this.state.email,\n        onKeyUp: console.log(\"asdasd\"),\n        onChange: function onChange(event) {\n          _this2.setState({\n            email: event.target.value\n          });\n        },\n        placeholder: \"Enter email ID\"\n      }), __jsx(Form.Input, {\n        error: !this.state.errorNumber ? null : {\n          content: this.state.errorNumber,\n          pointing: \"above\"\n        },\n        label: \"Mobile number\",\n        value: this.state.number,\n        onChange: function onChange(event) {\n          _this2.setState({\n            number: event.target.value\n          });\n        },\n        placeholder: \"Enter Mobile Number\"\n      })), __jsx(Button, {\n        loading: this.state.loading,\n        disabled: this.state.loading,\n        primary: true\n      }, \"Create Wallet\"))), __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(Segment, {\n        style: {\n          backgroundColor: \"#6886c5\",\n          height: \"100%\",\n          textAlign: \"center\"\n        }\n      }, __jsx(\"div\", {\n        style: {\n          textAlign: \"center\",\n          position: \"relative\",\n          top: \"20%\"\n        }\n      }, __jsx(\"p\", {\n        style: {\n          color: \"white\",\n          fontSize: \"50px\",\n          fontWeight: \"bold\" // paddingTop: \"20%\",\n\n        }\n      }, \"Create You Wallet\", __jsx(\"br\", null), \"Keep Your Documents Safe!\"))))));\n    }\n  }]);\n\n  return AddUser;\n}(Component);\n\nexport default AddUser;","map":{"version":3,"sources":["/home/sahil/Documents/Project/Capstone/Identity-Management/pages/user/new.js"],"names":["React","Component","Layout","instanceID","Form","Input","Header","Button","Message","Grid","Segment","Web3","AddUser","name","email","number","errorName","errorEmail","errorNumber","loading","errMessage","event","preventDefault","setState","state","bool","isMobileNumber","isEmail","web3","eth","getAccounts","accounts","methods","addUser","send","from","message","camp","input","pattern","test","onSubmit","content","pointing","target","value","console","log","backgroundColor","height","textAlign","position","top","color","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport {\n  Form,\n  Input,\n  Header,\n  Button,\n  Message,\n  Grid,\n  Segment,\n} from \"semantic-ui-react\";\nimport Web3 from \"../../ethereum/web3\";\n\nclass AddUser extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    number: \"\",\n    errorName: \"\",\n    errorEmail: \"\",\n    errorNumber: \"\",\n    loading: false,\n    errMessage: \"\",\n  };\n\n  isAlpha(input) {\n    var pattern = /^[a-zA-Z ]+$/;\n    return pattern.test(input);\n  }\n\n  isEmail(input) {\n    var pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n    return pattern.test(input);\n  }\n\n  isMobileNumber(input) {\n    var pattern = /^([0-9]{10})$/;\n    return pattern.test(input);\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n\n    this.setState({ errorName: \"\", errorEmail: \"\", errorNumber: \"\" });\n\n    let errorName;\n    let errorEmail;\n    let errorNumber;\n    //Required\n\n    // For name field!\n    if (!this.state.name) {\n      errorName = \"Required Fields!\";\n      this.setState({ errorName });\n    } else {\n      var bool = this.isMobileNumber(this.state.number);\n      if (!bool) {\n        this.setState({ errorNumber: \"Enter a valid mobile number!\" });\n      }\n    }\n\n    // For Email Field\n    if (!this.state.email) {\n      errorEmail = \"Required Fields!\";\n      this.setState({ errorEmail });\n    } else {\n      var bool = this.isEmail(this.state.email);\n      if (!bool) {\n        this.setState({ errorEmail: \"Enter a valid email id!\" });\n      }\n    }\n\n    // For Number field\n    if (!this.state.number) {\n      errorNumber = \"Required Fields!\";\n      this.setState({ errorNumber });\n    } else {\n      var bool = this.isEmail(this.state.email);\n      if (!bool) {\n        this.setState({ errorEmail: \"Enter a valid email id!\" });\n      }\n    }\n\n    this.setState({ loading: true, errMessage: \"\" });\n    const accounts = await web3.eth.getAccounts();\n    try {\n      const { name, email, number } = this.state;\n      await instanceID.methods.addUser(name, email, number).send({\n        from: accounts[0],\n      });\n    } catch (err) {\n      this.setState({ errMessage: err.message });\n    }\n    await camp;\n  };\n  render() {\n    return (\n      <Layout>\n        <Header as=\"h3\" content=\"Create new wallet\" />\n\n        <Grid>\n          <Grid.Column width={8}>\n            <Message\n              attached\n              //   style={{ width: \"60%\" }}\n              header=\"Welcome to our site!\"\n              content=\"Fill out the form below to sign-up for a new account\"\n            />\n            <Form\n              error={!!this.state.errMessage}\n              onSubmit={this.onSubmit}\n              className=\"attached segment\"\n            >\n              <Form.Field>\n                <Form.Input\n                  error={\n                    !this.state.errorName\n                      ? null\n                      : {\n                          content: this.state.errorName,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Full name\"\n                  type=\"text\"\n                  value={this.state.name}\n                  onChange={(event) => {\n                    this.setState({ name: event.target.value });\n                  }}\n                  placeholder=\"Enter full name\"\n                />\n                <Form.Input\n                  error={\n                    !this.state.errorEmail\n                      ? null\n                      : {\n                          content: this.state.errorEmail,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Email\"\n                  type=\"text\"\n                  value={this.state.email}\n                  onKeyUp={console.log(\"asdasd\")}\n                  onChange={(event) => {\n                    this.setState({ email: event.target.value });\n                  }}\n                  placeholder=\"Enter email ID\"\n                />\n                <Form.Input\n                  error={\n                    !this.state.errorNumber\n                      ? null\n                      : {\n                          content: this.state.errorNumber,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Mobile number\"\n                  value={this.state.number}\n                  onChange={(event) => {\n                    this.setState({ number: event.target.value });\n                  }}\n                  placeholder=\"Enter Mobile Number\"\n                />\n              </Form.Field>\n              {/* <Message\n                error\n                header=\"There was some errors with your submission\"\n                list={[\n                  this.state.errorName,\n                  this.state.errorEmail,\n                  this.state.errorNumber,\n                ]}\n              /> */}\n\n              <Button\n                loading={this.state.loading}\n                disabled={this.state.loading}\n                primary\n              >\n                Create Wallet\n              </Button>\n            </Form>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Segment\n              style={{\n                backgroundColor: \"#6886c5\",\n                height: \"100%\",\n                textAlign: \"center\",\n              }}\n            >\n              <div\n                style={{\n                  textAlign: \"center\",\n                  position: \"relative\",\n                  top: \"20%\",\n                }}\n              >\n                <p\n                  style={{\n                    color: \"white\",\n                    fontSize: \"50px\",\n                    fontWeight: \"bold\",\n                    // paddingTop: \"20%\",\n                  }}\n                >\n                  Create You Wallet\n                  <br />\n                  Keep Your Documents Safe!\n                </p>\n                {/* <p\n                  style={{\n                    // position: \"relative\",\n                    color: \"white\",\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    // bottom: \"15%\",\n                  }}\n                ></p> */}\n              </div>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}