{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Table, Button, Label } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport instance from \"../ethereum/compiledID\"; // show request pages that will show rows of all the requests available in the contract\n\nvar RequestRowsUser = /*#__PURE__*/function (_Component) {\n  _inherits(RequestRowsUser, _Component);\n\n  var _super = _createSuper(RequestRowsUser);\n\n  function RequestRowsUser() {\n    var _this;\n\n    _classCallCheck(this, RequestRowsUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false,\n      errMessage: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"approve\", function _callee() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errMessage: \"\"\n              });\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 4:\n              accounts = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(instance.methods.finalizeRequest(_this.props.id, 2).send({\n                from: accounts[0]\n              }));\n\n            case 7:\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n\n              _this.setState({\n                errMessage: _context.t0.message\n              });\n\n            case 12:\n              _this.setState({\n                loading: false\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 9]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reject\", function _callee2() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                errMessage: \"\"\n              });\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 4:\n              accounts = _context2.sent;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(instance.methods.finalizeRequest(_this.props.id, 3).send({\n                from: accounts[0]\n              }));\n\n            case 7:\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _this.setState({\n                errMessage: _context2.t0.message\n              });\n\n            case 12:\n              _this.setState({\n                loading: false\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 9]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(RequestRowsUser, [{\n    key: \"render\",\n    value: function render() {\n      // js syntax to destructure variables and objects.\n      var Row = Table.Row,\n          Cell = Table.Cell;\n      var _this$props = this.props,\n          id = _this$props.id,\n          request = _this$props.request;\n      var approve;\n\n      if (request[2] == 1) {\n        approve = \"Requested\";\n      } else if (request[2] == 2) {\n        approve = \"Approved\";\n      } else {\n        approve = \"Rejected\";\n      }\n\n      return __jsx(Row, null, __jsx(Cell, null, __jsx(Label, {\n        color: \"black\",\n        ribbon: true\n      }, id + 1)), __jsx(Cell, null, request[1]), __jsx(Cell, null, approve), __jsx(Cell, null, __jsx(Button, {\n        loading: this.state.loading,\n        disabled: this.state.loading,\n        onClick: this.approve,\n        basic: true,\n        color: \"blue\",\n        content: \"blue\"\n      }, \"Approve\")), __jsx(Cell, null, __jsx(Button, {\n        loading: this.state.loading,\n        disabled: this.state.loading,\n        onClick: this.reject,\n        basic: true,\n        color: \"red\"\n      }, \"Rejected\")));\n    }\n  }]);\n\n  return RequestRowsUser;\n}(Component);\n\nexport default RequestRowsUser;","map":{"version":3,"sources":["/home/sahil/Documents/Project/Capstone/Identity-Management/components/RequestRowsUser.js"],"names":["React","Component","Table","Button","Label","web3","instance","RequestRowsUser","loading","errMessage","setState","eth","getAccounts","accounts","methods","finalizeRequest","props","id","send","from","message","Row","Cell","request","approve","state","reject"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button, Label } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport instance from \"../ethereum/compiledID\";\n\n// show request pages that will show rows of all the requests available in the contract\nclass RequestRowsUser extends Component {\n  state = {\n    loading: false,\n    errMessage: \"\",\n  };\n\n  approve = async () => {\n    this.setState({ loading: true, errMessage: \"\" });\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await instance.methods.finalizeRequest(this.props.id, 2).send({\n        from: accounts[0],\n      });\n    } catch (err) {\n      this.setState({ errMessage: err.message });\n    }\n    this.setState({ loading: false });\n  };\n\n  reject = async () => {\n    this.setState({ loading: true, errMessage: \"\" });\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await instance.methods.finalizeRequest(this.props.id, 3).send({\n        from: accounts[0],\n      });\n    } catch (err) {\n      this.setState({ errMessage: err.message });\n    }\n    this.setState({ loading: false });\n  };\n\n  render() {\n    // js syntax to destructure variables and objects.\n    const { Row, Cell } = Table;\n    const { id, request } = this.props;\n    var approve;\n    if (request[2] == 1) {\n      approve = \"Requested\";\n    } else if (request[2] == 2) {\n      approve = \"Approved\";\n    } else {\n      approve = \"Rejected\";\n    }\n\n    return (\n      <Row>\n        <Cell>\n          <Label color=\"black\" ribbon>\n            {id + 1}\n          </Label>\n        </Cell>\n        <Cell>{request[1]}</Cell>\n        <Cell>{approve}</Cell>\n        <Cell>\n          <Button\n            loading={this.state.loading}\n            disabled={this.state.loading}\n            onClick={this.approve}\n            basic\n            color=\"blue\"\n            content=\"blue\"\n          >\n            Approve\n          </Button>\n        </Cell>\n        <Cell>\n          <Button\n            loading={this.state.loading}\n            disabled={this.state.loading}\n            onClick={this.reject}\n            basic\n            color=\"red\"\n          >\n            Rejected\n          </Button>\n        </Cell>\n      </Row>\n    );\n  }\n}\n\nexport default RequestRowsUser;\n"]},"metadata":{},"sourceType":"module"}