{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport web3 from \"../../ethereum/web3\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport Layout from \"../../components/Layout\";\nimport { Table } from \"semantic-ui-react\";\n\nvar ViewRequest = /*#__PURE__*/function (_Component) {\n  _inherits(ViewRequest, _Component);\n\n  var _super = _createSuper(ViewRequest);\n\n  function ViewRequest() {\n    var _this;\n\n    _classCallCheck(this, ViewRequest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderRows\", function _callee() {\n      var accounts, count, requests;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accounts = _context.sent;\n              console.log(accounts);\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(instanceID.methods.viewRequestLength(accounts[0]).call());\n\n            case 6:\n              count = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Promise.all(Array(parseInt(count)).fill().map(function (element, index) {\n                return instanceID.methods.viewRequestHeader(accounts[0], index).call();\n              })));\n\n            case 9:\n              requests = _context.sent;\n              console.log(requests[0][1]); // return requests.map((request, index) => {\n              //   return <RequestRows key={index} id={index} request={request} />;\n              // });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(ViewRequest, [{\n    key: \"render\",\n    value: function render() {\n      var Header = Table.Header,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Body = Table.Body;\n      this.renderRows();\n      return __jsx(Layout, null, __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"ID\"), __jsx(HeaderCell, null, \"User Address\"), __jsx(HeaderCell, null, \"Approval Status\"), __jsx(HeaderCell, null, \"More info\")))));\n    }\n  }]);\n\n  return ViewRequest;\n}(Component);\n\nexport default ViewRequest;","map":{"version":3,"sources":["/home/sahil/Documents/Project/Capstone/Identity-Management/pages/company/viewrequest.js"],"names":["React","Component","web3","instanceID","Layout","Table","ViewRequest","eth","getAccounts","accounts","console","log","methods","viewRequestLength","call","count","Promise","all","Array","parseInt","fill","map","element","index","viewRequestHeader","requests","Header","Row","HeaderCell","Body","renderRows"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,KAAT,QAAsB,mBAAtB;;IAEMC,W;;;;;;;;;;;;;;;;iEAGS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACYJ,IAAI,CAACK,GAAL,CAASC,WAAT,EADZ;;AAAA;AACLC,cAAAA,QADK;AAEXC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAFW;AAAA,+CAGSN,UAAU,CAACS,OAAX,CACjBC,iBADiB,CACCJ,QAAQ,CAAC,CAAD,CADT,EAEjBK,IAFiB,EAHT;;AAAA;AAGLC,cAAAA,KAHK;AAAA;AAAA,+CAOYC,OAAO,CAACC,GAAR,CACrBC,KAAK,CAACC,QAAQ,CAACJ,KAAD,CAAT,CAAL,CACGK,IADH,GAEGC,GAFH,CAEO,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACvB,uBAAOpB,UAAU,CAACS,OAAX,CACJY,iBADI,CACcf,QAAQ,CAAC,CAAD,CADtB,EAC2Bc,KAD3B,EAEJT,IAFI,EAAP;AAGD,eANH,CADqB,CAPZ;;AAAA;AAOLW,cAAAA,QAPK;AAiBXf,cAAAA,OAAO,CAACC,GAAR,CAAYc,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAZ,EAjBW,CAmBX;AACA;AACA;;AArBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAwBJ;AAAA,UACCC,MADD,GACmCrB,KADnC,CACCqB,MADD;AAAA,UACSC,GADT,GACmCtB,KADnC,CACSsB,GADT;AAAA,UACcC,UADd,GACmCvB,KADnC,CACcuB,UADd;AAAA,UAC0BC,IAD1B,GACmCxB,KADnC,CAC0BwB,IAD1B;AAEP,WAAKC,UAAL;AACA,aACE,MAAC,MAAD,QACE,MAAC,KAAD,QACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,UAAD,aADF,EAEE,MAAC,UAAD,uBAFF,EAGE,MAAC,UAAD,0BAHF,EAIE,MAAC,UAAD,oBAJF,CADF,CADF,CADF,CADF;AAeD;;;;EA7CuB7B,S;;AAgD1B,eAAeK,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport web3 from \"../../ethereum/web3\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport Layout from \"../../components/Layout\";\nimport { Table } from \"semantic-ui-react\";\n\nclass ViewRequest extends Component {\n  // static async getInitialProps(props) {}\n\n  renderRows = async () => {\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    const count = await instanceID.methods\n      .viewRequestLength(accounts[0])\n      .call();\n\n    const requests = await Promise.all(\n      Array(parseInt(count))\n        .fill()\n        .map((element, index) => {\n          return instanceID.methods\n            .viewRequestHeader(accounts[0], index)\n            .call();\n        })\n    );\n\n    console.log(requests[0][1]);\n\n    // return requests.map((request, index) => {\n    //   return <RequestRows key={index} id={index} request={request} />;\n    // });\n  };\n\n  render() {\n    const { Header, Row, HeaderCell, Body } = Table;\n    this.renderRows();\n    return (\n      <Layout>\n        <Table>\n          <Header>\n            <Row>\n              <HeaderCell>ID</HeaderCell>\n              <HeaderCell>User Address</HeaderCell>\n              <HeaderCell>Approval Status</HeaderCell>\n              <HeaderCell>More info</HeaderCell>\n            </Row>\n          </Header>\n          {/* <Body>{this.renderRows()}</Body> */}\n        </Table>\n      </Layout>\n    );\n  }\n}\n\nexport default ViewRequest;\n"]},"metadata":{},"sourceType":"module"}