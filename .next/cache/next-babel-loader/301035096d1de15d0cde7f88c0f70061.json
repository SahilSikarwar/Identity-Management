{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport web3 from \"../../ethereum/web3\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport Layout from \"../../components/Layout\";\nimport { Table } from \"semantic-ui-react\";\nimport RequestRows from \"../../components/RequestRows\";\n\nclass ViewRequest extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      requests: null\n    });\n\n    _defineProperty(this, \"renderRows\", async () => {\n      return this.state.requests.map((request, index) => {\n        // return <RequestRows key={index} id={index} request={request} />;\n        console.log(request);\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const accounts = await web3.eth.getAccounts();\n    const count = await instanceID.methods.viewRequestLength(accounts[0]).call();\n    const requests = await Promise.all(Array(parseInt(count)).fill().map((element, index) => {\n      return instanceID.methods.viewRequestHeader(accounts[0], index).call();\n    }));\n    this.setState({\n      requests\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body,\n      Cell\n    } = Table;\n    this.renderRows();\n    return __jsx(Layout, null, __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"ID\"), __jsx(HeaderCell, null, \"User Address\"), __jsx(HeaderCell, null, \"Approval Status\"), __jsx(HeaderCell, null, \"More info\"))), __jsx(Body, null, __jsx(Row, null, __jsx(Cell, null)))));\n  }\n\n}\n\nexport default ViewRequest;","map":{"version":3,"sources":["/home/sahil/Documents/Project/Capstone/Identity-Management/pages/company/viewrequest.js"],"names":["React","Component","web3","instanceID","Layout","Table","RequestRows","ViewRequest","requests","state","map","request","index","console","log","componentDidMount","accounts","eth","getAccounts","count","methods","viewRequestLength","call","Promise","all","Array","parseInt","fill","element","viewRequestHeader","setState","render","Header","Row","HeaderCell","Body","Cell","renderRows"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAE1B;AACNO,MAAAA,QAAQ,EAAE;AADJ,KAF0B;;AAAA,wCAwBrB,YAAY;AACvB,aAAO,KAAKC,KAAL,CAAWD,QAAX,CAAoBE,GAApB,CAAwB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACjD;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD,OAHM,CAAP;AAID,KA7BiC;AAAA;;AAMlC,QAAMI,iBAAN,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACe,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMC,KAAK,GAAG,MAAMhB,UAAU,CAACiB,OAAX,CACjBC,iBADiB,CACCL,QAAQ,CAAC,CAAD,CADT,EAEjBM,IAFiB,EAApB;AAIA,UAAMd,QAAQ,GAAG,MAAMe,OAAO,CAACC,GAAR,CACrBC,KAAK,CAACC,QAAQ,CAACP,KAAD,CAAT,CAAL,CACGQ,IADH,GAEGjB,GAFH,CAEO,CAACkB,OAAD,EAAUhB,KAAV,KAAoB;AACvB,aAAOT,UAAU,CAACiB,OAAX,CACJS,iBADI,CACcb,QAAQ,CAAC,CAAD,CADtB,EAC2BJ,KAD3B,EAEJU,IAFI,EAAP;AAGD,KANH,CADqB,CAAvB;AASA,SAAKQ,QAAL,CAAc;AAAEtB,MAAAA;AAAF,KAAd;AACD;;AASDuB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,GAAV;AAAeC,MAAAA,UAAf;AAA2BC,MAAAA,IAA3B;AAAiCC,MAAAA;AAAjC,QAA0C/B,KAAhD;AACA,SAAKgC,UAAL;AACA,WACE,MAAC,MAAD,QACE,MAAC,KAAD,QACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,UAAD,aADF,EAEE,MAAC,UAAD,uBAFF,EAGE,MAAC,UAAD,0BAHF,EAIE,MAAC,UAAD,oBAJF,CADF,CADF,EASE,MAAC,IAAD,QACE,MAAC,GAAD,QACE,MAAC,IAAD,OADF,CADF,CATF,CADF,CADF;AAmBD;;AArDiC;;AAwDpC,eAAe9B,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport web3 from \"../../ethereum/web3\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport Layout from \"../../components/Layout\";\nimport { Table } from \"semantic-ui-react\";\nimport RequestRows from \"../../components/RequestRows\";\n\nclass ViewRequest extends Component {\n  // static async getInitialProps(props) {}\n  state = {\n    requests: null,\n  };\n\n  async componentDidMount() {\n    const accounts = await web3.eth.getAccounts();\n    const count = await instanceID.methods\n      .viewRequestLength(accounts[0])\n      .call();\n\n    const requests = await Promise.all(\n      Array(parseInt(count))\n        .fill()\n        .map((element, index) => {\n          return instanceID.methods\n            .viewRequestHeader(accounts[0], index)\n            .call();\n        })\n    );\n    this.setState({ requests });\n  }\n\n  renderRows = async () => {\n    return this.state.requests.map((request, index) => {\n      // return <RequestRows key={index} id={index} request={request} />;\n      console.log(request);\n    });\n  };\n\n  render() {\n    const { Header, Row, HeaderCell, Body, Cell } = Table;\n    this.renderRows();\n    return (\n      <Layout>\n        <Table>\n          <Header>\n            <Row>\n              <HeaderCell>ID</HeaderCell>\n              <HeaderCell>User Address</HeaderCell>\n              <HeaderCell>Approval Status</HeaderCell>\n              <HeaderCell>More info</HeaderCell>\n            </Row>\n          </Header>\n          <Body>\n            <Row>\n              <Cell></Cell>\n            </Row>\n          </Body>\n        </Table>\n      </Layout>\n    );\n  }\n}\n\nexport default ViewRequest;\n"]},"metadata":{},"sourceType":"module"}