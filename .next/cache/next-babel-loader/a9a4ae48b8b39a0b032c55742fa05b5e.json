{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport web3 from \"../../ethereum/web3\";\nimport { Form, Input, Header, Button, Message, Grid, Segment } from \"semantic-ui-react\";\n\nvar AddUser = /*#__PURE__*/function (_Component) {\n  _inherits(AddUser, _Component);\n\n  var _super = _createSuper(AddUser);\n\n  function AddUser() {\n    var _this;\n\n    _classCallCheck(this, AddUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: \"\",\n      email: \"\",\n      number: \"\",\n      errorName: \"\",\n      errorEmail: \"\",\n      errorNumber: \"\",\n      loading: false,\n      errMessage: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validation\", function () {\n      _this.setState({\n        errorName: \"\",\n        errorEmail: \"\",\n        errorNumber: \"\"\n      });\n\n      var errorName;\n      var errorEmail;\n      var errorNumber; //Required\n      // For name field!\n\n      if (!_this.state.name) {\n        errorName = \"Required Fields!\";\n\n        _this.setState({\n          errorName: errorName\n        });\n      } else {\n        var bool = _this.isMobileNumber(_this.state.number);\n\n        if (!bool) {\n          _this.setState({\n            errorNumber: \"Enter a valid mobile number!\"\n          });\n        }\n      } // For Email Field\n\n\n      if (!_this.state.email) {\n        errorEmail = \"Required Fields!\";\n\n        _this.setState({\n          errorEmail: errorEmail\n        });\n      } else {\n        var bool = _this.isEmail(_this.state.email);\n\n        if (!bool) {\n          _this.setState({\n            errorEmail: \"Enter a valid email id!\"\n          });\n        }\n      } // For Number field\n\n\n      if (!_this.state.number) {\n        errorNumber = \"Required Fields!\";\n\n        _this.setState({\n          errorNumber: errorNumber\n        });\n      } else {\n        var bool = _this.isEmail(_this.state.email);\n\n        if (!bool) {\n          _this.setState({\n            errorEmail: \"Enter a valid email id!\"\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var accounts, _this$state, name, email, number;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                loading: true,\n                errMessage: \"\"\n              });\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 4:\n              accounts = _context.sent;\n              console.log(accounts);\n              _context.prev = 6;\n              _this$state = _this.state, name = _this$state.name, email = _this$state.email, number = _this$state.number;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(instanceID.methods.addUser(name, email, number).send({\n                from: accounts[0]\n              }));\n\n            case 10:\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](6);\n\n              _this.setState({\n                errMessage: _context.t0.message\n              });\n\n            case 15:\n              _this.setState({\n                loading: false\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[6, 12]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(AddUser, [{\n    key: \"isAlpha\",\n    value: function isAlpha(input) {\n      var pattern = /^[a-zA-Z ]+$/;\n      return pattern.test(input);\n    }\n  }, {\n    key: \"isEmail\",\n    value: function isEmail(input) {\n      var pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n      return pattern.test(input);\n    }\n  }, {\n    key: \"isMobileNumber\",\n    value: function isMobileNumber(input) {\n      var pattern = /^([0-9]{10})$/;\n      return pattern.test(input);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Header, {\n        as: \"h3\",\n        content: \"Create new wallet\"\n      }), __jsx(Grid, null, __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(Message, {\n        attached: true //   style={{ width: \"60%\" }}\n        ,\n        header: \"Welcome to our site!\",\n        content: \"Fill out the form below to sign-up for a new account\"\n      }), __jsx(Form, {\n        error: !!this.state.errMessage,\n        onSubmit: this.onSubmit,\n        className: \"attached segment\"\n      }, __jsx(Form.Field, null, __jsx(Form.Input, {\n        error: !this.state.errorName ? null : {\n          content: this.state.errorName,\n          pointing: \"above\"\n        },\n        label: \"Full name\",\n        onKeyDown: this.validation,\n        type: \"text\",\n        value: this.state.name,\n        onChange: function onChange(event) {\n          _this2.setState({\n            name: event.target.value\n          });\n        },\n        placeholder: \"Enter full name\"\n      }), __jsx(Form.Input, {\n        error: !this.state.errorEmail ? null : {\n          content: this.state.errorEmail,\n          pointing: \"above\"\n        },\n        label: \"Email\",\n        type: \"text\",\n        value: this.state.email,\n        onChange: function onChange(event) {\n          _this2.setState({\n            email: event.target.value\n          });\n        },\n        placeholder: \"Enter email ID\"\n      }), __jsx(Form.Input, {\n        error: !this.state.errorNumber ? null : {\n          content: this.state.errorNumber,\n          pointing: \"above\"\n        },\n        label: \"Mobile number\",\n        value: this.state.number,\n        onChange: function onChange(event) {\n          _this2.setState({\n            number: event.target.value\n          });\n        },\n        placeholder: \"Enter Mobile Number\"\n      })), __jsx(Message, {\n        error: true,\n        header: \"There was some errors with your submission\",\n        content: this.state.errMessage\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        disabled: this.state.loading,\n        primary: true\n      }, \"Create Wallet\"))), __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(Segment, {\n        style: {\n          backgroundColor: \"#6886c5\",\n          height: \"100%\",\n          textAlign: \"center\"\n        }\n      }, __jsx(\"div\", {\n        style: {\n          textAlign: \"center\",\n          position: \"relative\",\n          top: \"20%\"\n        }\n      }, __jsx(\"p\", {\n        style: {\n          color: \"white\",\n          fontSize: \"50px\",\n          fontWeight: \"bold\" // paddingTop: \"20%\",\n\n        }\n      }, \"Create You Wallet\", __jsx(\"br\", null), \"Keep Your Documents Safe!\"))))));\n    }\n  }]);\n\n  return AddUser;\n}(Component);\n\nexport default AddUser;","map":{"version":3,"sources":["/home/sahil/Documents/Project/Capstone/Identity-Management/pages/user/new.js"],"names":["React","Component","Layout","instanceID","web3","Form","Input","Header","Button","Message","Grid","Segment","AddUser","name","email","number","errorName","errorEmail","errorNumber","loading","errMessage","setState","state","bool","isMobileNumber","isEmail","event","preventDefault","eth","getAccounts","accounts","console","log","methods","addUser","send","from","message","input","pattern","test","onSubmit","content","pointing","validation","target","value","backgroundColor","height","textAlign","position","top","color","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport web3 from \"../../ethereum/web3\";\nimport {\n  Form,\n  Input,\n  Header,\n  Button,\n  Message,\n  Grid,\n  Segment,\n} from \"semantic-ui-react\";\n\nclass AddUser extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    number: \"\",\n    errorName: \"\",\n    errorEmail: \"\",\n    errorNumber: \"\",\n    loading: false,\n    errMessage: \"\",\n  };\n\n  isAlpha(input) {\n    var pattern = /^[a-zA-Z ]+$/;\n    return pattern.test(input);\n  }\n\n  isEmail(input) {\n    var pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n    return pattern.test(input);\n  }\n\n  isMobileNumber(input) {\n    var pattern = /^([0-9]{10})$/;\n    return pattern.test(input);\n  }\n\n  validation = () => {\n    this.setState({ errorName: \"\", errorEmail: \"\", errorNumber: \"\" });\n\n    let errorName;\n    let errorEmail;\n    let errorNumber;\n    //Required\n\n    // For name field!\n    if (!this.state.name) {\n      errorName = \"Required Fields!\";\n      this.setState({ errorName });\n    } else {\n      var bool = this.isMobileNumber(this.state.number);\n      if (!bool) {\n        this.setState({ errorNumber: \"Enter a valid mobile number!\" });\n      }\n    }\n\n    // For Email Field\n    if (!this.state.email) {\n      errorEmail = \"Required Fields!\";\n      this.setState({ errorEmail });\n    } else {\n      var bool = this.isEmail(this.state.email);\n      if (!bool) {\n        this.setState({ errorEmail: \"Enter a valid email id!\" });\n      }\n    }\n\n    // For Number field\n    if (!this.state.number) {\n      errorNumber = \"Required Fields!\";\n      this.setState({ errorNumber });\n    } else {\n      var bool = this.isEmail(this.state.email);\n      if (!bool) {\n        this.setState({ errorEmail: \"Enter a valid email id!\" });\n      }\n    }\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n\n    this.setState({ loading: true, errMessage: \"\" });\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    try {\n      const { name, email, number } = this.state;\n      await instanceID.methods.addUser(name, email, number).send({\n        from: accounts[0],\n      });\n    } catch (err) {\n      this.setState({ errMessage: err.message });\n    }\n    this.setState({ loading: false });\n  };\n  render() {\n    return (\n      <Layout>\n        <Header as=\"h3\" content=\"Create new wallet\" />\n\n        <Grid>\n          <Grid.Column width={8}>\n            <Message\n              attached\n              //   style={{ width: \"60%\" }}\n              header=\"Welcome to our site!\"\n              content=\"Fill out the form below to sign-up for a new account\"\n            />\n            <Form\n              error={!!this.state.errMessage}\n              onSubmit={this.onSubmit}\n              className=\"attached segment\"\n            >\n              <Form.Field>\n                <Form.Input\n                  error={\n                    !this.state.errorName\n                      ? null\n                      : {\n                          content: this.state.errorName,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Full name\"\n                  onKeyDown={this.validation}\n                  type=\"text\"\n                  value={this.state.name}\n                  onChange={(event) => {\n                    this.setState({ name: event.target.value });\n                  }}\n                  placeholder=\"Enter full name\"\n                />\n                <Form.Input\n                  error={\n                    !this.state.errorEmail\n                      ? null\n                      : {\n                          content: this.state.errorEmail,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Email\"\n                  type=\"text\"\n                  value={this.state.email}\n                  onChange={(event) => {\n                    this.setState({ email: event.target.value });\n                  }}\n                  placeholder=\"Enter email ID\"\n                />\n                <Form.Input\n                  error={\n                    !this.state.errorNumber\n                      ? null\n                      : {\n                          content: this.state.errorNumber,\n                          pointing: \"above\",\n                        }\n                  }\n                  label=\"Mobile number\"\n                  value={this.state.number}\n                  onChange={(event) => {\n                    this.setState({ number: event.target.value });\n                  }}\n                  placeholder=\"Enter Mobile Number\"\n                />\n              </Form.Field>\n              <Message\n                error\n                header=\"There was some errors with your submission\"\n                content={this.state.errMessage}\n              />\n\n              <Button\n                loading={this.state.loading}\n                disabled={this.state.loading}\n                primary\n              >\n                Create Wallet\n              </Button>\n            </Form>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Segment\n              style={{\n                backgroundColor: \"#6886c5\",\n                height: \"100%\",\n                textAlign: \"center\",\n              }}\n            >\n              <div\n                style={{\n                  textAlign: \"center\",\n                  position: \"relative\",\n                  top: \"20%\",\n                }}\n              >\n                <p\n                  style={{\n                    color: \"white\",\n                    fontSize: \"50px\",\n                    fontWeight: \"bold\",\n                    // paddingTop: \"20%\",\n                  }}\n                >\n                  Create You Wallet\n                  <br />\n                  Keep Your Documents Safe!\n                </p>\n                {/* <p\n                  style={{\n                    // position: \"relative\",\n                    color: \"white\",\n                    fontSize: \"30px\",\n                    fontWeight: \"bold\",\n                    // bottom: \"15%\",\n                  }}\n                ></p> */}\n              </div>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}