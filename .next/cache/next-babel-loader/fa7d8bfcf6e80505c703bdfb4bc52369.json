{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport web3 from \"../../ethereum/web3\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport Layout from \"../../components/Layout\";\nimport { Table, Header, Grid, Button, Segment, Message, Tab } from \"semantic-ui-react\";\n\nvar ViewRequest = /*#__PURE__*/function (_Component) {\n  _inherits(ViewRequest, _Component);\n\n  var _super = _createSuper(ViewRequest);\n\n  function ViewRequest() {\n    var _this;\n\n    _classCallCheck(this, ViewRequest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderRows\", function () {\n      // console.log(this.state.requests.length);\n      // return this.props.requests.map((request, index) => {\n      //   return (\n      //     <RequestRows\n      //       key={index}\n      //       id={index}\n      //       request={request}\n      //       address={this.props.address}\n      //       approversCount={this.props.approversCount}\n      //     />\n      //   );\n      // });\n      console.log(_this.props.accounts);\n    });\n\n    return _this;\n  }\n\n  _createClass(ViewRequest, [{\n    key: \"render\",\n    value: function render() {\n      var Header = Table.Header,\n          Row = Table.Row,\n          HeaderCell = Table.HeaderCell,\n          Body = Table.Body;\n      return __jsx(Layout, null, __jsx(Button, {\n        onClick: this.renderRows\n      }, \"click\"), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"User Address\"), __jsx(HeaderCell, null, \"Approval Status\"), __jsx(HeaderCell, null, \"More info\"))), __jsx(Body, null)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var accounts, count, requests;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accounts = _context.sent;\n              console.log(accounts);\n              count = instanceID.methods.viewRequestLength(accounts[0]).call();\n              console.log(count);\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(Promise.all(Array(parseInt(count)).fill().map(function (element, index) {\n                return instanceID.methods.viewRequestHeader(accounts[0], index).call();\n              })));\n\n            case 8:\n              requests = _context.sent;\n              return _context.abrupt(\"return\", {\n                accounts: accounts,\n                count: count,\n                requests: requests\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return ViewRequest;\n}(Component);\n\nexport default ViewRequest;","map":{"version":3,"sources":["/home/sahil/Documents/Project/Capstone/Identity-Management/pages/company/viewrequest.js"],"names":["React","Component","web3","instanceID","Layout","Table","Header","Grid","Button","Segment","Message","Tab","ViewRequest","console","log","props","accounts","Row","HeaderCell","Body","renderRows","eth","getAccounts","count","methods","viewRequestLength","call","Promise","all","Array","parseInt","fill","map","element","index","viewRequestHeader","requests"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,OANF,EAOEC,GAPF,QAQO,mBARP;;IAUMC,W;;;;;;;;;;;;;;;;iEAoBS,YAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWC,QAAvB;AACD,K;;;;;;;6BAEQ;AAAA,UACCV,MADD,GACmCD,KADnC,CACCC,MADD;AAAA,UACSW,GADT,GACmCZ,KADnC,CACSY,GADT;AAAA,UACcC,UADd,GACmCb,KADnC,CACca,UADd;AAAA,UAC0BC,IAD1B,GACmCd,KADnC,CAC0Bc,IAD1B;AAGP,aACE,MAAC,MAAD,QACE,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC;AAAtB,iBADF,EAEE,MAAC,KAAD,QACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,UAAD,uBADF,EAEE,MAAC,UAAD,0BAFF,EAGE,MAAC,UAAD,oBAHF,CADF,CADF,EAQE,MAAC,IAAD,OARF,CAFF,CADF;AAeD;;;oCArD4BL,K;;;;;;;+CACJb,IAAI,CAACmB,GAAL,CAASC,WAAT,E;;;AAAjBN,cAAAA,Q;AACNH,cAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AAEMO,cAAAA,K,GAAQpB,UAAU,CAACqB,OAAX,CAAmBC,iBAAnB,CAAqCT,QAAQ,CAAC,CAAD,CAA7C,EAAkDU,IAAlD,E;AACdb,cAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;;+CAEuBI,OAAO,CAACC,GAAR,CACrBC,KAAK,CAACC,QAAQ,CAACP,KAAD,CAAT,CAAL,CACGQ,IADH,GAEGC,GAFH,CAEO,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACvB,uBAAO/B,UAAU,CAACqB,OAAX,CACJW,iBADI,CACcnB,QAAQ,CAAC,CAAD,CADtB,EAC2BkB,KAD3B,EAEJR,IAFI,EAAP;AAGD,eANH,CADqB,C;;;AAAjBU,cAAAA,Q;+CASC;AAAEpB,gBAAAA,QAAQ,EAARA,QAAF;AAAYO,gBAAAA,KAAK,EAALA,KAAZ;AAAmBa,gBAAAA,QAAQ,EAARA;AAAnB,e;;;;;;;;;;;;EAjBenC,S;;AAyD1B,eAAeW,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport web3 from \"../../ethereum/web3\";\nimport instanceID from \"../../ethereum/compiledID\";\nimport Layout from \"../../components/Layout\";\nimport {\n  Table,\n  Header,\n  Grid,\n  Button,\n  Segment,\n  Message,\n  Tab,\n} from \"semantic-ui-react\";\n\nclass ViewRequest extends Component {\n  static async getInitialProps(props) {\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n\n    const count = instanceID.methods.viewRequestLength(accounts[0]).call();\n    console.log(count);\n\n    const requests = await Promise.all(\n      Array(parseInt(count))\n        .fill()\n        .map((element, index) => {\n          return instanceID.methods\n            .viewRequestHeader(accounts[0], index)\n            .call();\n        })\n    );\n    return { accounts, count, requests };\n  }\n\n  renderRows = () => {\n    // console.log(this.state.requests.length);\n    // return this.props.requests.map((request, index) => {\n    //   return (\n    //     <RequestRows\n    //       key={index}\n    //       id={index}\n    //       request={request}\n    //       address={this.props.address}\n    //       approversCount={this.props.approversCount}\n    //     />\n    //   );\n    // });\n    console.log(this.props.accounts);\n  };\n\n  render() {\n    const { Header, Row, HeaderCell, Body } = Table;\n\n    return (\n      <Layout>\n        <Button onClick={this.renderRows}>click</Button>\n        <Table>\n          <Header>\n            <Row>\n              <HeaderCell>User Address</HeaderCell>\n              <HeaderCell>Approval Status</HeaderCell>\n              <HeaderCell>More info</HeaderCell>\n            </Row>\n          </Header>\n          <Body></Body>\n        </Table>\n      </Layout>\n    );\n  }\n}\n\nexport default ViewRequest;\n"]},"metadata":{},"sourceType":"module"}